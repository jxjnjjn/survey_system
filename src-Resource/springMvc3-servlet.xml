<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"  
    xmlns:context="http://www.springframework.org/schema/context"  
    xmlns:aop="http://www.springframework.org/schema/aop" 
    xmlns:tx="http://www.springframework.org/schema/tx" 
    xmlns:mvc="http://www.springframework.org/schema/mvc"  
    xmlns:cache="http://www.springframework.org/schema/cache"
    xsi:schemaLocation=" 
           http://www.springframework.org/schema/beans   
           http://www.springframework.org/schema/beans/spring-beans-3.2.xsd   
           http://www.springframework.org/schema/context   
           http://www.springframework.org/schema/context/spring-context-3.2.xsd  
           http://www.springframework.org/schema/mvc   
           http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
           http://www.springframework.org/schema/cache 
           http://www.springframework.org/schema/cache/spring-cache-3.2.xsd
           http://www.springframework.org/schema/tx   
           http://www.springframework.org/schema/tx/spring-tx-3.2.xsd  
		   http://www.springframework.org/schema/aop   
           http://www.springframework.org/schema/aop/spring-aop-3.2.xsd" default-autowire="byName">
    
    <!-- 创建数据源   commons-dbcp.jar;commons-pool.jar包-->
	<context:property-placeholder location="classpath:database.properties"/>
	
    <!-- 启动项目时扫描contrllor的注解 -->
    <context:component-scan base-package="com.bisys.core"/> 
    
    <!-- 启用缓存注解功能(请将其配置在Spring主配置文件中) -->
    <cache:annotation-driven cache-manager="cacheManager" />
    
    <mvc:annotation-driven>
        <mvc:message-converters register-defaults="true">
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <constructor-arg value="UTF-8" />
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>
  
    <!-- 配置js，css等静态文件直接映射到对应的文件夹，不被DispatcherServlet处理 -->
    <mvc:resources mapping="/static/**" location="/static/"/>

    <!-- 走servlet的默认配置，先走默认的web.xml配置的servlet，没有的话才找对应controller -->
    <mvc:default-servlet-handler />
    
    <!-- jsp页面解析器，当Controller返回XXX字符串时，先通过拦截器，然后该类就会在jsp/目录下，查找XXX.jsp文件-->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
    	<property name="prefix" value="/WEB-INF/jsp/"></property>
    	<property name="suffix" value=".jsp"></property>
    </bean>
    
    <!-- 权限-->
	<bean id="permissionsHandler" class="com.bisys.core.aop.PermissionsAdvice" /> 
    <aop:config>  
        <aop:aspect id="aspect" ref="permissionsHandler">  
            <aop:pointcut id="permissionpoint" expression="execution(* com.bisys.core.action.system.composite.*.search*(..)) 
            											or execution(* com.bisys.core.action.system.journal.*.search*(..))"/> 
            <aop:before method="doBefore"  pointcut-ref="permissionpoint"/>    
            <aop:around method="doAround"  pointcut-ref="permissionpoint"/>       
        </aop:aspect>  
    </aop:config>
    <!-- 权限-->
    <!-- 数据库-->
    <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
     	<property name="dataSource" ref="demodataSource"></property>
	</bean>
    <!-- 声明式事务管理 -->
	<tx:advice id="myAdvice" transaction-manager="txManager">
		<tx:attributes>
     		<tx:method name="*" propagation="REQUIRED"/>
     	</tx:attributes>
	</tx:advice>
	<aop:config>
     	<aop:advisor pointcut="execution(* com.bisys.core.dao.impl.*.*(..))" advice-ref="myAdvice"/>
	</aop:config>
	<!-- 数据库-->
</beans>